/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.epcmp;

import com.mycompany.epcmp.Divisor.Fabricador;
import com.mycompany.epcmp.Divisor.Loop;
import com.mycompany.epcmp.Divisor.Variaveis;
import com.mycompany.epcmp.Simulador.ProcessadorV;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author natha
 */
public class start_main extends javax.swing.JFrame {

    /**
     * Creates new form start_main
     */
    static int MAX_NUCLEOS = 16;
    int PORTA = 1010;
    public start_main() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEscolherArquivo = new javax.swing.JButton();
        tfCaminhoArquivo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbQuantNucleos = new javax.swing.JComboBox<>();
        btnIniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEscolherArquivo.setText("Escolher Arquivo");
        btnEscolherArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscolherArquivoActionPerformed(evt);
            }
        });

        tfCaminhoArquivo.setEditable(false);

        jLabel1.setText("Caminho do Arquivo:");

        jLabel2.setText("Quantos NÃºcleos Deseja Usar?");

        cbQuantNucleos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16" }));
        cbQuantNucleos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbQuantNucleosActionPerformed(evt);
            }
        });

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEscolherArquivo)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(tfCaminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cbQuantNucleos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIniciar)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEscolherArquivo)
                    .addComponent(tfCaminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbQuantNucleos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                .addComponent(btnIniciar)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEscolherArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscolherArquivoActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Procurar Programa");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivos C++","cpp");
        fileChooser.setFileFilter(filter);
        int retorno_escolha_arquivo = fileChooser.showOpenDialog(this);
        if(retorno_escolha_arquivo == JFileChooser.APPROVE_OPTION){
           File file = fileChooser.getSelectedFile();
           if(file != null){
               tfCaminhoArquivo.setText(file.toString());
           } 
        }     
    }//GEN-LAST:event_btnEscolherArquivoActionPerformed

    private void cbQuantNucleosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbQuantNucleosActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbQuantNucleosActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        // TODO add your handling code here:
        int quantidade__nucleos = Integer.valueOf(cbQuantNucleos.getSelectedItem().toString());
        String cmd_rodar_clite = "java CodeGen "+tfCaminhoArquivo.getText();
        System.out.println(cmd_rodar_clite);
        String cmd[] = {"cmd.exe","/c","cd ferramentas\\Clite-Alterado\\out\\production\\Clite-CliteFCodeGen && "+cmd_rodar_clite};
        try {
            Process process_clite = Runtime.getRuntime().exec(cmd);
        } catch (IOException ex) {
            Logger.getLogger(start_main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        String caminho_arquivo_jas_gerado = tfCaminhoArquivo.getText().substring(0, tfCaminhoArquivo.getText().length()-4) + ".jas";
        System.out.println(caminho_arquivo_jas_gerado);
        
         try {
            TimeUnit.SECONDS.sleep(1);
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
        int numeros_de_arquivos_gerados;
        try {
            numeros_de_arquivos_gerados = dividir_arquivo(caminho_arquivo_jas_gerado);
            ProcessadorV[] processadores = new ProcessadorV[numeros_de_arquivos_gerados];
            for(int i=0;i<numeros_de_arquivos_gerados;i++){
                String caminho_arquivos = caminho_arquivo_jas_gerado.substring(0, caminho_arquivo_jas_gerado.length()-4)+i+".jas";
                System.out.println(caminho_arquivos);
                processadores[i] = new ProcessadorV(i,caminho_arquivos,(PORTA+i));
                processadores[i].run();
            }
            try {
                TimeUnit.SECONDS.sleep(2);
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }
            String comando_de_chamada = "java -jar EPCMP-1.0.jar parte "+numeros_de_arquivos_gerados+" "+PORTA;
            String cmd_NEXT[] = {"cmd.exe","/c","cd ferramentas\\Next && "+comando_de_chamada};
            Process process_NEXT = Runtime.getRuntime().exec(cmd_NEXT);
        } catch (IOException ex) {
            Logger.getLogger(start_main.class.getName()).log(Level.SEVERE, null, ex);
        }
        //new monitoring_frame().setVisible(true);
        
        dispose();
    }//GEN-LAST:event_btnIniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
     public int dividir_arquivo(String caminho_arquivo_jas) throws IOException {
        File file = new File(caminho_arquivo_jas);
        if(file != null) {
            InputStreamReader reader = new InputStreamReader(new FileInputStream(file));
            BufferedReader br = new BufferedReader(reader);
            int i = 0;
            String linha;
            linha = br.readLine();
            while(linha != null){
                linha = br.readLine();
                i++;
            }
            String[] leitura = new String[i];
            InputStreamReader reader2 = new InputStreamReader(new FileInputStream(file));
            BufferedReader br2 = new BufferedReader(reader2);
            i=1;
            linha = br2.readLine();
            leitura[0] = linha;
            while(linha != null){
                linha = br2.readLine();
                if(linha != null) {
                    leitura[i] = linha;
                    i++;
                }
            }
            Variaveis[] variaveis;
            Variaveis var= new Variaveis();
            variaveis=var.obter_variaveis_do_arquivo(leitura);
            for(i =0; i< variaveis.length; i++){
                variaveis[i].setValor(leitura);
            }
            //System.out.println("Finish");
            //Realizar um contador de loops antes
            int index_da_var_do_loop = 0;
            for(i=0;i<variaveis.length;i++){
                if(variaveis[i].testar_se_e_variavel_de_condicao_de_loop(leitura)){
                    index_da_var_do_loop = i;
                }
            }
            //Criar aqui uma repeticao para mais whiles no codigo
            int ini_loop = procurar_inicio_loop(leitura,0);
            int fim_loop = procurar_fim_loop(leitura,0);
            String[] conteudo_loop = new String[leitura.length-ini_loop-(leitura.length-(fim_loop-1))];
            int p=ini_loop;
            for(i=0; p< (leitura.length); i++){
                if(leitura[p] != null && (fim_loop-1) > p) {
                    conteudo_loop[i] = leitura[p];
                    p++;
                }else{
                    break;
                }
            }
            Loop loop = new Loop("Default", variaveis[index_da_var_do_loop], conteudo_loop);
            loop.Set_limites();
            System.out.println("O loop vai de "+loop.getInicio_loop()+" a "+loop.getFim_loop());
            Loop[] newloops;
            newloops = loop.dividir_loops(Integer.valueOf(cbQuantNucleos.getSelectedItem().toString()));
            String destino_arquivos = pegar_caminho(caminho_arquivo_jas);
            //System.out.println(destino_arquivos);
            String nome_arquivo = pegar_nome(caminho_arquivo_jas);
            Fabricador fabricador = new Fabricador(nome_arquivo,leitura,newloops,destino_arquivos);
            fabricador.criar_arquivos();
            return newloops.length;
        }
        return -1;
    }

    private String pegar_caminho(String caminho_arquivo_jas) {
        String caminho;
        caminho = caminho_arquivo_jas.substring(0,caminho_arquivo_jas.length()-4);
        StringBuilder sb = new StringBuilder(caminho);
        String reversecaminho = sb.reverse().toString();
        int y= caminho.length();
        for(int i=0; i<caminho.length();i++){
            char l = reversecaminho.charAt(i);
            String c = String.valueOf(l);
            if(c.equals("\\")){
                break;
            }
            y--;
        }
        caminho = caminho.substring(0,y);
        //System.out.println(""+y+" "+caminho.substring(0,y));
        return caminho;
    }

    private String pegar_nome(String caminho_arquivo_jas) {
        String caminho;
        caminho = caminho_arquivo_jas.substring(0,caminho_arquivo_jas.length()-4);
        StringBuilder sb = new StringBuilder(caminho);
        String reversecaminho = sb.reverse().toString();
        int y= caminho.length();
        for(int i=0; i<caminho.length();i++){
            char l = reversecaminho.charAt(i);
            String c = String.valueOf(l);
            if(c.equals("\\")){
                break;
            }
            y--;
        }

        //caminho = caminho.substring(0,(y-1));
        String nome_arquivo = caminho.substring(y);
        //System.out.println(nome_arquivo);
        return nome_arquivo;
    }
    static int procurar_inicio_loop(String[] leitura, int numero_loop){
        int i=0;
        for(String l: leitura){
            if(l.contains("LOOPTEST"+numero_loop)){
                break;
            }
            i++;
        }
        return i;
    }

    static int procurar_fim_loop(String[] leitura, int numero_loop){
        int i=0;
        for(String l: leitura){
            if(l.equals("LOOPEXIT"+numero_loop)){
                break;
            }
            i++;
        }
        //Pra compensar o caso de um 0<9, sendo feito 10 vezes
        return (i);
    }
    

   
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(start_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(start_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(start_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(start_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new start_main().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEscolherArquivo;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JComboBox<String> cbQuantNucleos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tfCaminhoArquivo;
    // End of variables declaration//GEN-END:variables
}

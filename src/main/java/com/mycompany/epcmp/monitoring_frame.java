/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.epcmp;

//import com.mycompany.epcmp.Comunicação.ClienteMestre;

import com.mycompany.epcmp.Comunicacao.ClienteMestre;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author natha
 */
public class monitoring_frame extends javax.swing.JFrame {
    public static String Nome_Arquivo;
    public static int Quantidade_Divisoes;
    public static int Porta_inicial_de_conexao;
    public static ClienteMestre clienteMestre;
    public static boolean presbtnCarregar = false; 
    public static boolean presbtnComecar = false;
    /**
     * Creates new form monitoring_frame
     */
    public monitoring_frame() {
        initComponents();
    }

    public static ClienteMestre getClienteMestre() {
        return clienteMestre;
    }

    public static void setClienteMestre(ClienteMestre clienteMestre) {
        monitoring_frame.clienteMestre = clienteMestre;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lbNumeroNucleos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbStatusMics = new javax.swing.JTable();
        btnStart = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnCarregar = new javax.swing.JButton();
        btnResetar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Numeros de Núcleos Usados:");

        lbNumeroNucleos.setText(" ");

        tbStatusMics.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Repartição", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbStatusMics);

        btnStart.setText("Começar");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnClose.setText("Fechar Todos");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnCarregar.setText("Carregar");
        btnCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarActionPerformed(evt);
            }
        });

        btnResetar.setText("Resetar");
        btnResetar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetarActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbNumeroNucleos, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCarregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnStart))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVoltar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(btnResetar)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(lbNumeroNucleos))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnStart)
                        .addComponent(btnCarregar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResetar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnVoltar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        if(presbtnCarregar){
            DefaultTableModel dtmTabela =(DefaultTableModel) tbStatusMics.getModel();
            clienteMestre.setFaseStart(true);
            for(int i=0;i<Quantidade_Divisoes;i++){
                dtmTabela.setValueAt("Processo Iniciado", i,1);
            }
            presbtnComecar=true;
        }else{
            JOptionPane.showMessageDialog(null, "Antes de Começar o Processo é Necessario Carregar o Codigo Nos Simuladores","Alerta",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
         lbNumeroNucleos.setText(String.valueOf(Quantidade_Divisoes));
        DefaultTableModel dtmTabela =(DefaultTableModel) tbStatusMics.getModel();
        for(int i=0;i<Quantidade_Divisoes;i++){
            String nome_atual_rep = Nome_Arquivo+i;
            String[] linha = {nome_atual_rep,"Não Conectado"};
            dtmTabela.addRow(linha);
        }
        
        try {
            //ClienteMestre cm = getClienteMestre();
            clienteMestre.iniciar_conexao();
        } catch (IOException ex) {
            Logger.getLogger(monitoring_frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int i=0;i<Quantidade_Divisoes;i++){
            dtmTabela.setValueAt("Conectado", i,1);
        }
        
        //System.out.println(Nome_Arquivo+" "+Quantidade_Divisoes+" "+Porta_inicial_de_conexao);
    }//GEN-LAST:event_formWindowOpened

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtmTabela =(DefaultTableModel) tbStatusMics.getModel();
        clienteMestre.setFaseClose(true);
        for(int i=0;i<Quantidade_Divisoes;i++){
            //String nome_atual_rep = Nome_Arquivo+i;
            //String[] linha = {nome_atual_rep,"Fechado"};
            //0dtmTabela.addRow(linha);
            dtmTabela.setValueAt("Fechado",i,1);
        }
        try {
            clienteMestre.fechar_conexao();
        } catch (IOException ex) {
            Logger.getLogger(monitoring_frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarActionPerformed
            // TODO add your handling code here:
        DefaultTableModel dtmTabela =(DefaultTableModel) tbStatusMics.getModel();
        clienteMestre.setLoad(true);
         for(int i=0;i<Quantidade_Divisoes;i++){
            //String nome_atual_rep = Nome_Arquivo+i;
            //String[] linha = {nome_atual_rep,"Carregado"};
            dtmTabela.setValueAt("Carregado",i,1);
        }
         presbtnCarregar = true;
    }//GEN-LAST:event_btnCarregarActionPerformed

    private void btnResetarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetarActionPerformed
        // TODO add your handling code here:
        if(presbtnComecar){
            DefaultTableModel dtmTabela =(DefaultTableModel) tbStatusMics.getModel();
            clienteMestre.setReset(true);
             for(int i=0;i<Quantidade_Divisoes;i++){
                //String nome_atual_rep = Nome_Arquivo+i;
                //String[] linha = {nome_atual_rep,c};
                //dtmTabela.addRow(linha);
                dtmTabela.setValueAt("Carregado",i,1);
            }
            presbtnComecar=false; 
        }else{
            JOptionPane.showMessageDialog(null, "Antes de Resetar os Simuladores é Necessario Começar o Processo","Alerta",JOptionPane.ERROR_MESSAGE);            
        }
    }//GEN-LAST:event_btnResetarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        clienteMestre.setFaseClose(true);
        String comando_de_chamada = "java -jar EPCMP-1.0.jar ";
        //System.out.println(comando_de_chamada);
        //Alterar o caminho do app
        //String cmd_Mic[] = {"cmd.exe","/c","cd lib\\Ferramentas\\Next && "+comando_de_chamada};
        /*try {
            Process process_Mic = Runtime.getRuntime().exec(cmd_Mic);
        } catch (IOException ex) {
            Logger.getLogger(monitoring_frame.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        String a1[]={};
        EPCMP.main(a1);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        /*try {
            clienteMestre.fechar_conexao();
        } catch (IOException ex) {
            Logger.getLogger(monitoring_frame.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        //System.exit(0);
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(monitoring_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(monitoring_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(monitoring_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(monitoring_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        if(args.length == 3){
            Nome_Arquivo = args[0];
            Quantidade_Divisoes = Integer.valueOf(args[1]);
            Porta_inicial_de_conexao = Integer.valueOf(args[2]);
            setClienteMestre(new ClienteMestre(Porta_inicial_de_conexao,Quantidade_Divisoes));
        }else{
            System.exit(0);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new monitoring_frame().setVisible(true);
                
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarregar;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnResetar;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbNumeroNucleos;
    private javax.swing.JTable tbStatusMics;
    // End of variables declaration//GEN-END:variables
}
